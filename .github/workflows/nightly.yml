name: FreeTube Nightly Releases

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
jobs:
  check-update:
    outputs:
      new: ${{steps.new.outputs.new_commit}}
      version: ${{ steps.versionNumber.outputs.result }}
    name: Check for upstream update
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: "Pull upstream"
      run: |
        git clone https://github.com/FreeTubeApp/FreeTube.git FreeTube

    - name: Git Configuraion
      run: |
        git config --global user.name "ChunkyProgrammer"
        git config --global user.email "78101139+ChunkyProgrammer@users.noreply.github.com"
        git config --global credential.helper store
        echo "https://ChunkyProgrammer:${{ secrets.MY_TOKEN }}@github.com" > ~/.git-credentials

    - name: Get Version Number
      uses: jozsefsallai/node-package-version@v1.0.4
      with:
        path: 'FreeTube/package.json'
        follow-symlinks: false

    - name: Set Version Number Variable
      id: versionNumber
      uses: actions/github-script@v6
      env:
        VERSION_NUMBER_NIGHTLY: ${{ env.PACKAGE_VERSION }}-nightly-${{ github.run_number }}
      with:
        result-encoding: string
        script: |
          return "${{env.VERSION_NUMBER_NIGHTLY}}"
  
    - name: "Check for new commits"
      id: new
      run : |
        mkdir nightly-${{github.run_number}}
        cd FreeTube
        if [[ $(git log --since=1.days) ]]; then
          echo "New commits found"
          echo "new_commit=true" >> $GITHUB_OUTPUT
          git log --pretty=format:"%h - %an, %ar : %s" --since=1.days 1> ../nightly-${{github.run_number}}/nightly-changes.txt
          cd ..
          rm -r FreeTube
          git add *
          git commit -a --message="Update Upstream files"
          git push
          git tag v${{ steps.versionNumber.outputs.result }}
          git push origin --tags
        else
          echo "No new commits found"
          echo "new_commit=false" >> $GITHUB_OUTPUT
        fi
  create-release:
    needs: check-update
    if: ${{ needs.check-update.outputs.new == 'true' }}
    name: release
    outputs:
      release-id: ${{ steps.release-step.outputs.id}}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Release
      id: release-step
      uses: softprops/action-gh-release@v1
      with:
        # body_path: nightly-${{github.run_number}}/nightly-changes.txt
        token: ${{ secrets.MY_TOKEN }}
        tag_name: v${{ needs.check-update.outputs.version }}

  upload-files-to-release:
    needs: [check-update, create-release]
    if: ${{ needs.check-update.outputs.new == 'true' }}
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x]
        runtime:
          - linux-x64
          - linux-armv7l
          - linux-arm64
          - win-x64
          - win-arm64
          - osx-x64
          # `osx-arm64` disabled due to "macOS gatekeeper"
          # See details in https://github.com/FreeTubeApp/FreeTube/pull/2113
          # - osx-arm64
        include:
        - runtime: linux-x64
          os: ubuntu-latest

        - runtime: linux-armv7l
          os: ubuntu-latest

        - runtime: linux-arm64
          os: ubuntu-latest

        - runtime: osx-x64
          os: macOS-latest

#        - runtime: osx-arm64
#          os: macOS-latest

        - runtime: win-x64
          os: windows-latest

        - runtime: win-arm64
          os: windows-latest

    runs-on: ${{ matrix.os }}
    steps:
      - name: "Pull upstream"
        run: |
          git clone https://github.com/FreeTubeApp/FreeTube.git FreeTube
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
          cache-dependency-path: FreeTube/yarn.lock
      
      - name: yarn run ci
        run: |
          cd FreeTube
          yarn run ci

      - name: Update package.json version
        uses: jossef/action-set-json-field@v2.1
        with:
          file: FreeTube/package.json
          field: version
          value: ${{ needs.check-update.outputs.version }}

      # replace text for nightly files
      # - name: Find and Replace
      #   uses: jacobtomlinson/gha-find-replace@v3
      #   with:
      #     find: "https://api.github.com/repos/freetubeapp/freetube/releases?per_page=1"
      #     replace: "https://api.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases?per_page=1"
      #     regex: false
    
      - name: Build x64 with Node.js ${{ matrix.node-version}}
        if: contains(matrix.runtime, 'x64')
        run: |
          cd FreeTube
          npm run build --if-present

      - name: Build ARMv7l with Node.js ${{ matrix.node-version}}
        if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.runtime, 'linux-armv7l')
        run: |
          cd FreeTube
          npm run build:arm32 --if-present
      
      - name: Build ARM64 with Node.js ${{ matrix.node-version}}
        if: contains(matrix.runtime, 'arm64')
        run: |
          cd FreeTube
          npm run build:arm64 --if-present
  
      - name: Upload AppImage x64 Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.runtime, 'linux-x64')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube_${{ needs.check-update.outputs.version }}_amd64.AppImage
          asset_path: FreeTube/build/FreeTube-${{ needs.check-update.outputs.version }}.AppImage
          asset_content_type: application/vnd.appimage
  
      - name: Upload Linux .zip x64 Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.runtime, 'linux-x64')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube-${{ needs.check-update.outputs.version }}-linux-portable-x64.zip
          asset_path: FreeTube/build/freetube-${{ needs.check-update.outputs.version }}.zip
          asset_content_type: application/zip
  
      - name: Upload Linux .7z x64 Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.runtime, 'linux-x64')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube-${{ needs.check-update.outputs.version }}-linux-portable-x64.7z
          asset_path: FreeTube/build/freetube-${{ needs.check-update.outputs.version }}.7z
          asset_content_type: application/x-7z-compressed
  
      - name: Upload Linux .zip ARMv7l Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.runtime, 'linux-armv7l')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube-${{ needs.check-update.outputs.version }}-linux-portable-armv7l.zip
          asset_path: FreeTube/build/freetube-${{ needs.check-update.outputs.version }}-armv7l.zip
          asset_content_type: application/zip
  
      - name: Upload Linux .7z ARMv7l Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.runtime, 'linux-armv7l')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube-${{ needs.check-update.outputs.version }}-linux-portable-armv7l.7z
          asset_path: FreeTube/build/freetube-${{ needs.check-update.outputs.version }}-armv7l.7z
          asset_content_type: application/x-7z-compressed
  
      - name: Upload Linux .zip ARM64 Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.runtime, 'linux-arm64')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube-${{ needs.check-update.outputs.version }}-linux-portable-arm64.zip
          asset_path: FreeTube/build/freetube-${{ needs.check-update.outputs.version }}-arm64.zip
          asset_content_type: application/zip
  
      - name: Upload Linux .7z ARM64 Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.runtime, 'linux-arm64')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube-${{ needs.check-update.outputs.version }}-linux-portable-arm64.7z
          asset_path: FreeTube/build/freetube-${{ needs.check-update.outputs.version }}-arm64.7z
          asset_content_type: application/x-7z-compressed
  
      - name: Upload Linux .deb x64 Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.runtime, 'linux-x64')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube_${{ needs.check-update.outputs.version }}_amd64.deb
          asset_path: FreeTube/build/freetube_${{ needs.check-update.outputs.version }}_amd64.deb
          asset_content_type: application/vnd.debian.binary-package
  
      - name: Upload Linux .deb ARMv7l Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.runtime, 'linux-armv7l')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube_${{ needs.check-update.outputs.version }}_armv7l.deb
          asset_path: FreeTube/build/freetube_${{ needs.check-update.outputs.version }}_armv7l.deb
          asset_content_type: application/vnd.debian.binary-package
  
      - name: Upload Linux .deb ARM64 Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.runtime, 'linux-arm64')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube_${{ needs.check-update.outputs.version }}_arm64.deb
          asset_path: FreeTube/build/freetube_${{ needs.check-update.outputs.version }}_arm64.deb
          asset_content_type: application/vnd.debian.binary-package
  
      - name: Upload Linux .rpm x64 Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.runtime, 'linux-x64')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube_${{ needs.check-update.outputs.version }}_amd64.rpm
          asset_path: FreeTube/build/freetube-${{ needs.check-update.outputs.version }}.x86_64.rpm
          asset_content_type: application/x-rpm
  
        # rpm are not built for armv7l
  
      - name: Upload Linux .rpm ARM64 Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.runtime, 'linux-arm64')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube_${{ needs.check-update.outputs.version }}_arm64.rpm
          asset_path: FreeTube/build/freetube-${{ needs.check-update.outputs.version }}.aarch64.rpm
          asset_content_type: application/x-rpm
  
      - name: Upload Windows x64 .exe Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'windows') && startsWith(matrix.runtime, 'win-x64')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube-${{ needs.check-update.outputs.version }}-setup-x64.exe
          asset_path: FreeTube/build/freetube Setup ${{ needs.check-update.outputs.version }}.exe
          asset_content_type: application/x-ms-dos-executable
  
      - name: Upload Windows arm64 .exe Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'windows') && startsWith(matrix.runtime, 'win-arm64')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube-${{ needs.check-update.outputs.version }}-setup-arm64.exe
          asset_path: FreeTube/build/freetube Setup ${{ needs.check-update.outputs.version }}.exe
          asset_content_type: application/x-ms-dos-executable
  
      - name: Upload Windows x64 .zip Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'windows') && startsWith(matrix.runtime, 'win-x64')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube-${{ needs.check-update.outputs.version }}-win-x64-portable.zip
          asset_path: FreeTube/build/freetube-${{ needs.check-update.outputs.version }}-win.zip
          asset_content_type: application/zip
  
      - name: Upload Windows x64 .7z Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'windows') && startsWith(matrix.runtime, 'win-x64')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube-${{ needs.check-update.outputs.version }}-win-x64-portable.7z
          asset_path: FreeTube/build/freetube-${{ needs.check-update.outputs.version }}-win.7z
          asset_content_type: application/x-7z-compressed
  
      - name: Upload Windows arm64 .zip Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'windows') && startsWith(matrix.runtime, 'win-arm64')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube-${{ needs.check-update.outputs.version }}-win-arm64-portable.zip
          asset_path: FreeTube/build/freetube-${{ needs.check-update.outputs.version }}-arm64-win.zip
          asset_content_type: application/zip
  
      - name: Upload Windows arm64 .7z Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'windows') && startsWith(matrix.runtime, 'win-arm64')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube-${{ needs.check-update.outputs.version }}-win-arm64-portable.7z
          asset_path: FreeTube/build/freetube-${{ needs.check-update.outputs.version }}-arm64-win.7z
          asset_content_type: application/x-7z-compressed
  
      - name: Upload Windows x64 portable Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'windows') && startsWith(matrix.runtime, 'win-x64')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube-${{ needs.check-update.outputs.version }}-win-x64-portable.exe
          asset_path: FreeTube/build/FreeTube ${{ needs.check-update.outputs.version }}.exe
          asset_content_type: application/x-ms-dos-executable
  
      - name: Upload Windows arm64 portable Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'windows') && startsWith(matrix.runtime, 'win-arm64')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube-${{ needs.check-update.outputs.version }}-win-arm64-portable.exe
          asset_path: FreeTube/build/FreeTube ${{ needs.check-update.outputs.version }}.exe
          asset_content_type: application/x-ms-dos-executable
  
      - name: Upload Mac x64 .dmg Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'macos') && startsWith(matrix.runtime, 'osx-x64')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube-${{ needs.check-update.outputs.version }}-mac-x64.dmg
          asset_path: FreeTube/build/freetube-${{ needs.check-update.outputs.version }}.dmg
          asset_content_type: application/x-apple-diskimage
  
  #    - name: Upload Mac arm64 .dmg Release
  #      uses: actions/upload-release-asset@v1
  #      if: startsWith(matrix.os, 'macos') && startsWith(matrix.runtime, 'osx-arm64')
  #      env:
  #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #      with:
  #        upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
  #        asset_name: freetube-${{ needs.check-update.outputs.version }}-mac-arm64.dmg
  #        asset_path: FreeTube/build/freetube-${{ needs.check-update.outputs.version }}-arm64.dmg
  #        asset_content_type: application/x-apple-diskimage
  
      - name: Upload Mac x64 .zip Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'macos') && startsWith(matrix.runtime, 'osx-x64')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube-${{ needs.check-update.outputs.version }}-mac-x64.zip
          asset_path: FreeTube/build/freetube-${{ needs.check-update.outputs.version }}-mac.zip
          asset_content_type: application/zip
  
      - name: Upload Mac x64 .7z Release
        uses: actions/upload-release-asset@v1
        if: startsWith(matrix.os, 'macos') && startsWith(matrix.runtime, 'osx-x64')
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
          asset_name: freetube-${{ needs.check-update.outputs.version }}-mac-x64.7z
          asset_path: FreeTube/build/freetube-${{ needs.check-update.outputs.version }}-mac.7z
          asset_content_type: application/x-7z-compressed
  
  #    - name: Upload Mac arm64 .zip Release
  #      uses: actions/upload-release-asset@v1
  #      if: startsWith(matrix.os, 'macos') && startsWith(matrix.runtime, 'osx-arm64')
  #      env:
  #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #      with:
  #        upload_url: https://uploads.github.com/repos/FreeTubeApp/FreeTube-Nightly/releases/${{ needs.create-release.outputs.release-id }}/assets{?name,label}
  #        asset_name: freetube-${{ needs.check-update.outputs.version }}-mac-arm64.zip
  #        asset_path: FreeTube/build/freetube-${{ needs.check-update.outputs.version }}-arm64-mac.zip
  #        asset_content_type: application/x-apple-diskimage
